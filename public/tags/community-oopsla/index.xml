<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Community Oopsla on occasional posts about technology </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://localhost:1313/tags/community-oopsla/index.xml</link>
    <language>en-us</language>
    
    
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>OOPSLA 2008 - Day 1</title>
      <link>http://localhost:1313/oopsla-2008-day1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/oopsla-2008-day1/</guid>
      <description>&lt;p&gt;After the seven hour drive to Nashville, we settled in to our hotel and hit the bar. Getting the brain ready for todays activities. I&amp;rsquo;ll be updating at the end of each Tutorial or Keynote through out the day, but will only publish the entries at the end of day, so bare with me if the entrys seem like many posts in one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Green Bar for C++
&lt;/strong&gt;This was the first turotial I atteneded. The one I had picked was canceled and this was my runner up. The tutorial was handled by the author CUTE Peter Sommerlad. The presentation was good and packed full of content. I have been out of the C++ game for a while now, but his presentation of CUTE integrated in to the new Eclipse has sparked my interest once again and really made me want to take on another C++ project. Maybe an optimized parser this extends Python bindings .. just have to find something to parse.&lt;/p&gt;

&lt;p&gt;They were very well setup for the course. Course was very interactive and hands on. I spent the second half of the course implementing the classic Numeric to Roman converted using Eclipse and CUTE with TDD practices. The practices themselves were all refresher for me, but getting a chance to put my hands on some C++ felt good. It had been over a year since I really got dirty in C++. They also had multi-platform installs of Eclipse and a CUTE package archive on a flash drive. Everyone in the tutorial was up and running in no time. I made not of this for sure, in case my any of my recent proposals to speak get accepted.&lt;/p&gt;

&lt;p&gt;I was also able to see other peoples approach to the same problem which is always insigntful and thought provoking, no matter the language. I spoke with Peter breifly after the tutorial. The functionality of the CUTE framework itself only took about 2 days of development. The integration in to Eclipse is a different monster. Thanks for the free pen and the swiss chocolate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building SOAs with Web Services
&lt;/strong&gt;Olaf from IBM gives us a great tutorial on using SOAs to build web services. The introduction was an abstract overview of SOA (Service Oriented Archiecture) with some touches on concepts and motivation behind SOAP and WSDLs.&lt;/p&gt;

&lt;p&gt;He then spoke about some real world implementations and showed some examples and diagrams of those implementations. After which we began the interactive part of walking through a very simple implementation that tied a PHP script to a Java SOA via Tomcat/Axis.&lt;/p&gt;

&lt;p&gt;Coverage was also given to user experiences and best practices and identifying when a given problem lends itself to the SOA (WSDL/SOAP) solution. Overall it was a good tutorial and getting a chance to see the Web Tools plugin for Eclipse in action generating bottom-up from existing POJO and making the WSDL contract was neat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Afterwards
&lt;/strong&gt;After the day at OOPSLA my wife and I at some St. Louis style BBQ down on Broadway. It was very good. I have a personal goal to eat nothing but BBQ for dinner during my time in Nashville.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OOPSLA 2008 - Day 2</title>
      <link>http://localhost:1313/oopsla-2008-day2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/oopsla-2008-day2/</guid>
      <description>&lt;p&gt;After a goodnight sleep, I mange to NOT be late for this mornings tutorial sessions. Today I have planned to attend &lt;em&gt;Advanced Software Architecture&lt;/em&gt; and &lt;em&gt;Pattern-Oriented Software Architecture: A Pattern Language for Distributed Computing.&lt;strong&gt; &lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advanced Software Architecture
&lt;/strong&gt;Marwan Abu-Khalil was the presenter for this tutorial. This wasn&amp;rsquo;t as hands on as I usually like from my tutorial sessions, but with that being said, there was a lot of good knowledge being tossed around.&lt;/p&gt;

&lt;p&gt;We cover the best practices and outlined a rough path one should follow when designing software. Now it was mentioned frequently and often, that this was just the most common path encountered and that each project would lend itself to a different, there inherit lines the hard part of software architecture. If you could just put it in a patterns book, everyone would be good at it. The quote frequently used was &amp;ldquo;All architecture is design, but not all design is architecture.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Brainstorm session instigated by this tutorial session.&lt;/em&gt;
As a developer I myself tend to loose focus of the bigger picture as I dive deep in to the inner workings of some specific implementation or core sub-system. This course gives a nice high-level perspective of what the software architecture should focus on. For micro sized development teams; 1-5 developers, these things become even more important, since in most cases, every developer on a such a small team will be responsible for some of the most complicated areas of the system. This goes against the rule of thumb that architects, though they should be involved in the implementation, should not be involved in developing any of the core or complex systems of the architecture, so to prevent them from loosing focus in the details.&lt;/p&gt;

&lt;p&gt;I agree with this, but as mentioned, in micro teams this can be very hard, if no impossible to do (1 man &amp;ldquo;team&amp;rdquo;). This is why introducing things like peer code review and daily standups are so important. Most people seem to have this idea that the smaller you are, the less you need to apply todays agile methods, on the countrary, staying agile with more developers as you can decouple subsystems and spread them across multiple developers or teams. Staying objective and keeping systems decoupled and preventing architectural drift in a one or two man team is even harder than say three, five man teams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pattern-Oriented Software Architecture
&lt;/strong&gt;This tutorial was done by Doug Schmidt, side note, he&amp;rsquo;s been living in Nashville the last few years doing his research and work out of Vanderbilt University.&lt;/p&gt;

&lt;p&gt;This was a great tutorial. The subtitle was &lt;em&gt;A Pattern Language for Distributed Computing&lt;/em&gt;. But it wasn&amp;rsquo;t so much about completely new patterns, in fact any on fimilar with any of the GoF, PLOP, or POSA books would of received a lot of review. This was about using many proven patterns that we&amp;rsquo;ve used in stand-alone archictectures for a long time, take those and establish a pattern language for solving the problems we encoutned in todays distributed enviroments.&lt;/p&gt;

&lt;p&gt;A pattern mentioned which I must of missed from the POSA 2 book, but new it immediately because I have implemented it under different names was the &lt;a href=&#34;http://en.wikipedia.org/wiki/Active_Object&#34;&gt;Active Object&lt;/a&gt; pattern. Quickly, Active Object decouples the execution from the invokation of a method. Good coverage of other patterns as well. The handout includes pros and cons in a distributed enviroment for all the patterns presented.&lt;/p&gt;

&lt;p&gt;I did take issue with some of the cons being things like &amp;ldquo;Harder to test&amp;rdquo; and &amp;ldquo;Harder to debug&amp;rdquo;. I just kept thinking .. if you mock out the interactive components so that your tests are decoupled from any implementation, it seems no harder to test the Active Object pattern vs. any other piece of software. Questions like what if the request comes back out of order? What if the request processor goes offline? What do you do with the queue? What if you get a response for a request that is no longer valid? No more room in your queue? Etc, etc.. All of these conditions can and should be covered by tests. I don&amp;rsquo;t have issues with testing or debuging my most recent Active Object implementation.&lt;/p&gt;

&lt;p&gt;There was also a nice closing discussion about utilizing multi-core, embedded devices giving us a new reason to remember all the cycle and memory conservation techniques every said we could forget and if existing functional languages would be the wave of the future to take advantage of advancing core technology. Schmidt conclusion was we will need a new language or a dramatic extention to deal with these new concurrency issues &amp;hellip; I just kept thinking &lt;a href=&#34;http://www.stackless.com/&#34;&gt;Stackless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the end, it was another standard issue Schmidt tutorial, it did not disappoint. Fast pace and lots of invited Q&amp;amp;A and viewer interaction. Even if you don&amp;rsquo;t like the guy or his ideas, it is worth it to see him give a talk at least once. Random side note .. he refered to Python once, following the words &amp;ldquo;novelty languages like&amp;hellip;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t proof this at all, corrections welcomed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OOPSLA 2008 - Day 3</title>
      <link>http://localhost:1313/oopsla-2008-day3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/oopsla-2008-day3/</guid>
      <description>&lt;p&gt;After a few drinks at the hotel bar, we head to bed to get ready for Day 3 of OOPSLA.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keynote: &lt;/strong&gt;Pyrimids and Software or something&amp;hellip;
I showed up late for this, but from what I gathered, it was a comparison to the Pyrmids and software. It was really facinating and I enjoyed Mark Lehner&amp;rsquo;s talk about finding the lost city and everything .. but something this heavy at 8:30 in the morning is well .. yeah, neat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introducing New Ideas Into Your Organization
&lt;/strong&gt;Linda Rising (&lt;a href=&#34;http://lindarising.org&#34;&gt;http://lindarising.com&lt;/a&gt; for those of you living in a cave) gave a great tutorial on how people can get new idea into their organization. Everyone has had to deal with this at one time or another no matter where they have worked. People don&amp;rsquo;t like change. They don&amp;rsquo;t wanna change if they don&amp;rsquo;t have to, even if all the reasons are good and they agree with the new idea, in the end, if they don&amp;rsquo;t want to change, they won&amp;rsquo;t. As my wife always says. &amp;ldquo;I want you to WANT to take out the garbage.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Quick side note, I was speaking with Ricardo Lopez on the day previous to Linda&amp;rsquo;s tutorial and his advice was to make sure you have enough in your savings for when you get fired. Now as funny as it sounds, his reason, which was being fearless and with standing pressures to make concessions was directly inline with the ideas and patterns Linda provided in her tutorial.&lt;/p&gt;

&lt;p&gt;Back to the tutorial. I arrived early (mistake), so the other early arriver&amp;rsquo;s and myself ended up being actors in a play. The play of how to introduce new ideas into your organization. The play included Innovators, Early Adopters, Connectors, etc.. and how/when you can use these different types of people in the organization to our benefit and pitfalls to avoid so they don&amp;rsquo;t become enemies.&lt;/p&gt;

&lt;p&gt;The Cliff notes version, get the easy ones on board first (innovators like new cool stuff), put a small step of the new idea in place with this group. Now take it to the early adopters (how depends on your corporate culture), get them involved and maybe add another step. Continue to promote this style growth until you have enough good results from this new thing to ask some of the good ol&amp;rsquo; boys who might have middle managements ear, continue on this path with Brown Bags and cookie offerings. At this point the movement itself is viral and you&amp;rsquo;ll need to start tending to the delicate process of getting the upper management stamp of approval.&lt;/p&gt;

&lt;p&gt;Anyway, the tutorial was a pattern language for introducing new ideas based of her latest book and I must say, I really enjoyed the tutorial and acting out my part. Though the pattern language should be adjusted and tailored to fit your corporate culture, I think it is an excellent start for anyone having problems getting no ideas in to their company, be it agile development or more water fountains. The tutorial finished with a set of group sessions tasked with solving a member of each groups problem. You can find more information about these patterns and her on Linda&amp;rsquo;s website mentioned at the start of this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Afterwards
&lt;/strong&gt;After the keynote and tutorial, my wife and I ate at the hotel restaurant and called it a night. This conference is fun and loaded with great information and conversation, but leaves my brain so tired at the end of the day it is hard to to much else but eat some food and go to sleep.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>