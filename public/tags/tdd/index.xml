<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Tdd on occasional posts about technology </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://localhost:1313/tags/tdd/index.xml</link>
    <language>en-us</language>
    
    
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>What is test driven development?</title>
      <link>http://localhost:1313/what-is-tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/what-is-tdd/</guid>
      <description>&lt;p&gt;Was having a conversation at the office today about TDD. Talking about TDD with some of my co-workers who still develop in a more traditional manner motivated me to write an introduction to TDD for them. I know, I know, there are plenty on the web, but this little write up serves two purposes. One, help my co-workers who aren&amp;rdquo;t familiar with some of the TDD ways learn how and why we (the TDD collective) develop the way we do. Two, the more you talk about write about a topic, the better you get at that topic.&lt;/p&gt;

&lt;p&gt;TDD goes something like this.
&lt;ul&gt;
    &lt;li&gt;Write a failing test.&lt;/li&gt;
    &lt;li&gt;Make the test pass as fast as possible.&lt;/li&gt;
    &lt;li&gt;Refactor existing or add new tests.&lt;/li&gt;
    &lt;li&gt;Make those new/refactored tests pass.&lt;/li&gt;
&lt;/ul&gt;
That is TDD at is simplest level. I&amp;rdquo;ll cover each of these bullets with a paragraph or two and code examples so you can see how TDD drives the implementation.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>