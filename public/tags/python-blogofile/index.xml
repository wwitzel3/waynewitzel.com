<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Python Blogofile on occasional posts about technology </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://localhost:1313/tags/python-blogofile/index.xml</link>
    <language>en-us</language>
    
    
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>Scheduling Posts with Blogofile</title>
      <link>http://localhost:1313/blogofile-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/blogofile-scheduling/</guid>
      <description>&lt;p&gt;
    I wanted to be able to schedule posts with blogofile and this was the quickest way I could think of to do it. If someone knows of a better way, than please comment cause I would love to read about.
&lt;/p&gt;

&lt;p&gt;
    My change is pretty simple, if the date in the YAML header is &gt; than now, throw a PostProcessing exception and continue on with the next post. I added a cronjob that runs blogofile build every hour, so this solution sucks for blogs that take a long time to build or if you want precision scheduling, but my site builds fast and I am ok with an hour delay.

&lt;br/&gt;

&lt;pre class=&#34;brush: diff&#34;&gt;
diff -r e370cb5a903f blog/_controllers/blog/post.py
--- a/blog/_controllers/blog/post.py    Tue Aug 23 23:16:37 2011 -0400
+++ b/blog/_controllers/blog/post.py    Sun Aug 28 19:03:28 2011 -0400
@@ -70,7 +70,14 @@
     def __str__(self):
         return repr(self.value)
 
+class PostProcessException(Exception):
 
+    def __init__(self, value):
+        self.value = value
+
+    def __str__(self):
+        return repr(self.value)
+                
 class Post(object):
     &#34;&#34;&#34;
     Class to describe a blog post and associated metadata
@@ -179,7 +186,11 @@
             self.slug = slug
 
         if not self.date:
-            self.date = datetime.datetime.now(pytz.timezone(self.__timezone))
+            self.date       = datetime.datetime.now(pytz.timezone(self.__timezone))
+        else:
+            if self.date &gt; datetime.datetime.now(pytz.timezone(self.__timezone)):
+                raise PostProcessException(&#39;Post date is in the future.&#39;)
+
         if not self.updated:
             self.updated = self.date
 
@@ -367,7 +378,7 @@
             raise
         try:
             p = Post(src, filename=post_fn)
-        except PostParseException as e:
+        except (PostParseException,PostProcessException) as e:
             logger.warning(u&#34;{0} : Skipping this post.&#34;.format(e.value))
             continue
         #Exclude some posts
&lt;/pre&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>